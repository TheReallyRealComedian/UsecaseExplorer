version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-usecase_explorer_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - db_data:/var/lib/postgresql/data/
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-usecase_explorer_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    restart: unless-stopped
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL}
      FLASK_ENV: development
      # Add the Apollo environment variables here:
      APOLLO_CLIENT_ID: ${APOLLO_CLIENT_ID}
      APOLLO_CLIENT_SECRET: ${APOLLO_CLIENT_SECRET}
      APOLLO_TOKEN_URL: ${APOLLO_TOKEN_URL}
      APOLLO_LLM_API_BASE_URL: ${APOLLO_LLM_API_BASE_URL}

      PYTHONPATH: /app
    volumes:
      - ./backend:/app/backend
    ports:
      - "5001:5000"
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data: